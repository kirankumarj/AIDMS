 src/app/app.constants.ts                           |   1 +
 src/app/app.module.ts                              |   6 +-
 .../resource-create/resource-create.component.css  |  75 +++++++
 .../resource-create/resource-create.component.html | 130 +++++++++++-
 .../resource-create/resource-create.component.ts   | 230 ++++++++++++++++++++-
 src/environments/environment.ts                    |   2 +-
 6 files changed, 434 insertions(+), 10 deletions(-)

diff --git a/src/app/app.constants.ts b/src/app/app.constants.ts
index 0f4146a..1143de8 100644
--- a/src/app/app.constants.ts
+++ b/src/app/app.constants.ts
@@ -13,6 +13,7 @@ export class AppConstants {
   public static GET_DEFECTIVE_ASSETS = AppConstants.QDMP_URI + 'incidents/count';
   public static GET_LIVE_NEWS_FEED = AppConstants.QDMP_URI + 'incidents/count';
   public static GET_NOTIFICATIONS = AppConstants.QDMP_URI + 'incidents/count';
+  public static RESOURCES_URL = AppConstants.QDMP_URI + '/resources';
   public static DELETE_ORGANIZATION = function (orgId: string) {
     return AppConstants.QDMP_URI + `dmorg/${orgId}`;
   };
diff --git a/src/app/app.module.ts b/src/app/app.module.ts
index ae2b242..8a5c250 100644
--- a/src/app/app.module.ts
+++ b/src/app/app.module.ts
@@ -63,6 +63,8 @@ import { DashboardComponent } from './dashboard/dashboard.component';
 import { ViewAssetsComponent } from './new-assets/view-assets/view-assets.component';
 import {IncidentCountService} from './services/dashboard/incident.service';
 import {DashboardEffects} from './dashboard/store-dashboard/dashboard.effects';
+import { ResourceEffects } from './resource/store/resource.effects';
+import { ResourceService } from './services/resource.service';
 
 import { CommonModule} from '@angular/common';
 import { IncidentProcessComponent } from './incident/incident-process/incident-process.component';
@@ -121,7 +123,7 @@ import { IncidentProcessComponent } from './incident/incident-process/incident-p
     CommonModule,
     AppRoutingModule,
     StoreModule.forRoot(AllReducers),
-    EffectsModule.forRoot([OrgnizationEffects,AssetsEffects,DashboardEffects]),
+    EffectsModule.forRoot([OrgnizationEffects,AssetsEffects,DashboardEffects, ResourceEffects]),
     StoreDevtoolsModule.instrument(
      {
        maxAge: 25
@@ -136,7 +138,7 @@ import { IncidentProcessComponent } from './incident/incident-process/incident-p
     OverlayDeleteComponent,
     OverlayUpdateOrgComponent
   ],
-  providers: [ InfoService, RestService, OrganizationService ,AssetsService, IncidentCountService],
+  providers: [ InfoService, RestService, OrganizationService ,AssetsService, IncidentCountService, ResourceService],
   bootstrap: [AppComponent],
   schemas: [
     CUSTOM_ELEMENTS_SCHEMA
diff --git a/src/app/resource/resource-create/resource-create.component.css b/src/app/resource/resource-create/resource-create.component.css
index e69de29..a694384 100644
--- a/src/app/resource/resource-create/resource-create.component.css
+++ b/src/app/resource/resource-create/resource-create.component.css
@@ -0,0 +1,75 @@
+.container{width:100%; height: 100%;}
+/* #info{margin-top: 100px; position:fixed;background-color:rgba(13, 13, 13, 0.5);padding:10px 10px 10px 10px;font:13px bold sans-serif;color:#fff;left:0px;top:0px;width:100%;height:140px;overflow:hidden} */
+table {
+  width: 100%;
+}
+
+.mat-form-field {
+  font-size: 14px;
+  width: 100%;
+}
+
+td, th {
+  width: 25%;
+}
+
+
+.container{
+  width:100%;
+  height: 540px;
+}
+#info{margin-top: 100px; position:fixed;background-color:rgba(13, 13, 13, 0.5);padding:10px 10px 10px 10px;font:13px bold sans-serif;color:#fff;left:0px;top:0px;width:100%;height:140px;overflow:hidden}
+
+.mat-figure {
+display: inline !important;
+}
+table {
+  width: 100%;
+}
+
+#wrapper {
+  margin: 0 auto;
+}
+#leftcolumn, #rightcolumn {
+ border: 1px solid grey;
+ float: left;
+ min-height: 450px;
+ color: black;
+}
+#leftcolumn {
+  width: 550px;
+  background-color: #777;
+  height: 540px;
+}
+#rightcolumn {
+  width: 650px;
+  background-color:black;
+}
+
+div#search input {
+	width: 530px;
+}
+div#results {
+	font-style: sans-serif;
+	color: black;
+	font-size: 75%;
+}
+
+div#search {
+    background-color: lightgray;
+    position: absolute;
+    top: 50px;
+    height: auto;
+    padding: 2px;
+    width: 537px;
+    font-size: 15px;
+}
+
+.example-container {
+  display: flex;
+  flex-direction: column;
+}
+
+.example-container > * {
+  width: 100%;
+}
diff --git a/src/app/resource/resource-create/resource-create.component.html b/src/app/resource/resource-create/resource-create.component.html
index 8873a1f..de84650 100644
--- a/src/app/resource/resource-create/resource-create.component.html
+++ b/src/app/resource/resource-create/resource-create.component.html
@@ -1,3 +1,127 @@
-<p>
-  resource-create works!
-</p>
+<div id="wrapper">
+  <div id="leftcolumn">
+      <mat-accordion class="example-headers-align">
+          <mat-expansion-panel [expanded]="step === 0" (opened)="setStep(0)" hideToggle>
+            <mat-expansion-panel-header>
+              <mat-panel-title>
+                Resource
+              </mat-panel-title>
+              <mat-panel-description>
+                Enter Resource Details
+              </mat-panel-description>
+            </mat-expansion-panel-header>
+
+            <mat-form-field>
+              <input matInput placeholder="resource Name" [(ngModel)]="newResource.name" [value]=newResource.name>
+            </mat-form-field>
+
+            <mat-form-field>
+              <mat-select placeholder="Select Organization" [(value)]="newResource.org">
+                <!-- <mat-option>None</mat-option>
+                <mat-option value="option1">Org 1</mat-option>
+                <mat-option value="option2">Org 2</mat-option>
+                <mat-option value="option3">Org 3</mat-option>-->
+               <mat-option *ngFor="let org of organizationsList" [value]="org.name">
+                  {{org.name}}
+                </mat-option>
+              </mat-select>
+            </mat-form-field>
+
+            <mat-action-row>
+              <button mat-button color="primary" (click)="nextStep()">Next</button>
+            </mat-action-row>
+          </mat-expansion-panel>
+
+          <mat-expansion-panel [expanded]="step === 1" (opened)="setStep(1)" hideToggle>
+            <mat-expansion-panel-header>
+              <mat-panel-title>
+                Other Details
+              </mat-panel-title>
+              <mat-panel-description>
+                Enter Email Id and Dept info
+              </mat-panel-description>
+            </mat-expansion-panel-header>
+
+            <!-- <mat-form-field>
+                <input matInput placeholder="Organization Id" [(ngModel)]="newResource.id" [value]=newResource.id>
+              </mat-form-field> -->
+              
+              <mat-form-field>
+                <mat-select placeholder="Select Department" [(value)]="newResource.department">
+                  <mat-option>None</mat-option>
+                  <mat-option value="Health">Health</mat-option>
+                  <mat-option value="Food">Food</mat-option>
+                  <mat-option value="Relief">Relief</mat-option>
+                <!--  <mat-option *ngFor="let org of organizationsList" [value]="org.name">
+                    {{org.name}}
+                  </mat-option>-->
+                </mat-select>
+              </mat-form-field>
+
+              <mat-form-field>
+                <mat-select placeholder="Select Job" [(value)]="newResource.job">
+                  <mat-option>None</mat-option>
+                  <mat-option value="Manager">Manager</mat-option>
+                  <mat-option value="Food">Relief Officer</mat-option>
+                  <mat-option value="Asst Manager">Asst Manager</mat-option>
+                <!--  <mat-option *ngFor="let org of organizationsList" [value]="org.name">
+                    {{org.name}}
+                  </mat-option>-->
+                </mat-select>
+              </mat-form-field>
+
+              <mat-form-field>
+                <input matInput placeholder="email Id" [(ngModel)]="newResource.email" [value]=newResource.email>
+              </mat-form-field>
+
+
+            <mat-action-row>
+              <button mat-button color="warn" (click)="prevStep()">Previous</button>
+              <button mat-button color="primary" (click)="nextStep()">Next</button>
+            </mat-action-row>
+          </mat-expansion-panel>
+
+          <mat-expansion-panel [expanded]="step === 2" (opened)="setStep(2)" hideToggle>
+            <mat-expansion-panel-header>
+              <mat-panel-title>
+                Map Location
+              </mat-panel-title>
+              <mat-panel-description>
+                Map location Details
+              </mat-panel-description>
+            </mat-expansion-panel-header>
+                <mat-form-field>
+                    <input matInput type="text" placeholder="City" [(ngModel)]="newResource.address.city" [value]=newResource.address.city (keypress)="loadMap()">
+                </mat-form-field>
+                <mat-form-field>
+                  <input matInput type="text" placeholder="state district" [(ngModel)]="newResource.address.state_district" [value]=newResource.address.state_district (keypress)="loadMap()">
+                </mat-form-field>
+                <mat-form-field>
+                  <input matInput type="text" placeholder="State" [(ngModel)]="newResource.address.state" [value]=newResource.address.state (keypress)="loadMap()">
+                </mat-form-field>
+                <mat-form-field>
+                    <input matInput type="text" placeholder="Country" [(ngModel)]="newResource.address.country" [value]=newResource.address.country (keypress)="loadMap()">
+                </mat-form-field>
+                <mat-form-field>
+                    <input matInput type="text" placeholder="Pin Code" [(ngModel)]="newResource.address.postcode" [value]=newResource.address.postcode (keypress)="loadMap()">
+                </mat-form-field>
+
+            <mat-action-row>
+              <button mat-button color="warn" (click)="prevStep()">Previous</button>
+              <button mat-button color="primary" (click)="saveResource()">Save</button>
+            </mat-action-row>
+          </mat-expansion-panel>
+        </mat-accordion>
+  </div>
+
+
+  <div id="rightcolumn" style="color:black;">
+        <div id="map" class="container"></div>
+        <div id="search">
+            <input type="text" (keyup)="searchMapLocationBySearchData()" id="mapSearch" [(ngModel)]="searchAddress" type="text" name="addr" value="" id="addr" size="10" placeholder="Search location"/>
+            <div *ngFor="let addressDetails of address">
+              <div (click)="moveMap(addressDetails)" style="border: 1px solid black; margin: 0.5 px;">{{addressDetails.display_name}}</div>
+             </div>
+          </div>
+  </div>
+</div>
\ No newline at end of file
diff --git a/src/app/resource/resource-create/resource-create.component.ts b/src/app/resource/resource-create/resource-create.component.ts
index 760a81d..c3bfbfb 100644
--- a/src/app/resource/resource-create/resource-create.component.ts
+++ b/src/app/resource/resource-create/resource-create.component.ts
@@ -1,15 +1,237 @@
-import { Component, OnInit } from '@angular/core';
+import { Component, OnInit, AfterViewInit } from '@angular/core';
+import { InfoService } from '../../info.service';
+import { OrgMapInfo } from '../../models/organization/OrgMapInfo';
+import { MatSnackBar } from '@angular/material';
+
+import * as maptalks from 'maptalks';
+import { PopupComponent } from '../../popup/popup.component';
+import { OrganizationService } from '../../services/organization.service';
+
+import { environment } from '../../../environments/environment';
+import { Observable } from 'rxjs';
+import {Store} from '@ngrx/store';
+import {AppState} from '../../app.state';
+import { AddResource } from '../store/resource.actions';
+import { Resource } from '../../models/resource';
+
 
 @Component({
   selector: 'app-resource-create',
   templateUrl: './resource-create.component.html',
   styleUrls: ['./resource-create.component.css']
 })
-export class ResourceCreateComponent implements OnInit {
-
-  constructor() { }
 
+export class ResourceCreateComponent implements OnInit, AfterViewInit {
+  selectedOrg='';
+  selectedDept='';
+  resurce: Resource;
+  step = 0;
+  searchAddress;
+  address;
+  map;
+  extent;
+  ex;
+  mapStatus;
+  center;
+  addressInfo;
+  addressLocation = [];
+  newResource = {
+    org: '',
+    department: '',
+    job: '',
+    email: '',
+    name: '',
+    latitude: 0,
+    longitude: 0,
+    type: '',
+    info: '',
+    address: {
+      city: '',
+      country: '',
+      postcode: '',
+      state: '',
+      state_district: ''
+    }
+  };
+  organizationsList = [];
+  constructor(private service: InfoService, private snackBar: MatSnackBar,
+    private organizationService: OrganizationService ,
+    private store: Store<AppState>
+) { }
   ngOnInit() {
+    this.newResource.latitude = 78.498;
+    this.newResource.longitude = 17.476;
+    if (environment.isDataAvailableInRealService) {
+      console.log('Hit the service :: Get the all Org Details ');
+      this.getAllOrganizations();
+    } else {
+      console.log('Mock Data :: Get the all Org Details ');
+      this.service.mapLocation.subscribe(res => this.organizationsList = res);
+      this.service.saveOrganization(this.organizationsList);
+    }
+  }
+  ngAfterViewInit() {
+    window.navigator.geolocation.getCurrentPosition((location) => {
+        this.newResource.latitude = location.coords.longitude;
+        this.newResource.longitude  = location.coords.latitude;
+        this.loadMap();
+        }
+    );
+  }
+  setStep(index: number) {
+    this.step = index;
+  }
+  nextStep() {
+    this.step++;
+  }
+  prevStep() {
+    this.step--;
+  }
+  loadMap() {
+    this.map = new maptalks.Map('map', {
+      center: [this.newResource.latitude, this.newResource.longitude],
+      zoom: 12,
+      centerCross: true,
+      zoomControl: {
+        'position'  : 'top-right'
+      },
+      baseLayer: new maptalks.TileLayer('base', {
+        // urlTemplate: 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',
+        // subdomains: ['a', 'b' , 'c' , 'd'],
+        // attribution: '&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>'
+      urlTemplate: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
+      subdomains: ['a', 'b' , 'c'],
+      attribution: '&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>'
+    })
+    });
+    this.map.on('zoomend moveend', () => {
+          this.getStatus();
+    });
+}
+getStatus() {
+  this.addressInfo = '';
+  this.step = 2;
+  this.searchAddress = '';
+  this.newResource.address.city = '';
+  this.newResource.address.state = '';
+  this.newResource.address.postcode = '';
+  this.newResource.address.country = '';
+  this.newResource.address.state_district = '';
+  this.center = this.map.getCenter();
+  this.newResource.latitude =  parseFloat(this.center.x.toFixed(5));
+  this.newResource.longitude = parseFloat(this.center.y.toFixed(5));
+  this.service.getMapLocationDataByLL(this.newResource.latitude, this.newResource.longitude).
+    subscribe((res) => {
+      this.addressInfo = res;
+      this.mapValues(this.addressInfo, this.newResource.address);
+    });
+}
+
+mapValues(fromAddress, toAddress) {
+    this.searchAddress = fromAddress.display_name;
+    toAddress.city = fromAddress.address.city;
+    toAddress.state = fromAddress.address.state;
+    toAddress.postcode = fromAddress.address.postcode;
+    toAddress.country = fromAddress.address.country;
+    toAddress.state_district = fromAddress.address.state_district;
+    this.step = 2;
+}
+  moveMap(addresDetails) {
+    this.newResource.latitude =  parseFloat(addresDetails.lon);
+    this.newResource.longitude = parseFloat(addresDetails.lat);
+    this.map.remove();
+    this.loadMap();
+    this.mapValues(addresDetails, this.newResource.address);
+    this.address = [];
+  }
+  saveOrg() {
+    if (environment.isDataAvailableInRealService) {
+      console.log('Hit Service:: Create Resource ', this.newResource);
+      this.createOrganization();
+    } else {
+      console.log('Mock Data :: Create Resource ', this.newResource);
+        this.organizationsList.push(this.newResource);
+        this.service.saveOrganization(this.organizationsList);
+        this.snackBar.openFromComponent(PopupComponent, {
+        duration: 1000,
+        data: 'Saved Data...!'
+      });
+    this.step = 0;
+    }
+  }
+
+  saveResource() {
+    if (environment.isDataAvailableInRealService) {
+      console.log('Hit Service:: Create Resource ', this.newResource);
+      this.createresource();
+    } else {
+      console.log('Mock Data :: Create Resource ', this.newResource);
+        this.organizationsList.push(this.newResource);
+        this.service.saveOrganization(this.organizationsList);
+        this.snackBar.openFromComponent(PopupComponent, {
+        duration: 1000,
+        data: 'Saved Data...!'
+      });
+    this.step = 0;
+    }
+  }
+  searchMapLocationBySearchData() {
+    this.service.getMapLocationData(this.searchAddress).subscribe((res) => {
+      this.address = res;
+    });
+  }
+
+  createresource(){
+    this.store.dispatch(new AddResource(this.newResource));
+    this.newResource.name = '';
+    this.newResource.org='';
+    this.newResource.email='';
+    this.newResource.job='';
+    this.newResource.address.city='';
+    this.newResource.address.country='';
+    this.newResource.address.postcode='';
+    this.newResource.address.state='';
+    this.newResource.address.state_district='';
+    this.step = 0;
+    
+
+  }
+  createOrganization() {
+    // this.store.dispatch(new AddOrganization(this.newResource));
+    this.organizationService.createOrganization(this.newResource).subscribe((res) => {
+      // console.log(res);
+      if ( res.id ) {
+        this.snackBar.openFromComponent(PopupComponent, {
+          duration: 1000,
+          data: 'Saved Data...!'
+        });
+        this.step = 0;
+        this.newResource = null;
+        
+      }
+    },
+    error => {
+      this.snackBar.openFromComponent(PopupComponent, {
+        duration: 2000,
+        data: 'Service Error...!'
+      });
+      this.step = 0;
+    });
   }
 
+  getAllOrganizations() {
+
+    this.organizationService.getAllOrganizations().subscribe((res) => {
+      this.organizationsList = res;
+      console.log(this.organizationsList);
+    },
+    error => {
+      this.snackBar.openFromComponent(PopupComponent, {
+        duration: 3000,
+        data: 'Service Error...!'
+      });
+      this.step = 0;
+    });
+  }
 }
+
diff --git a/src/environments/environment.ts b/src/environments/environment.ts
index 78ba615..17bcc3e 100644
--- a/src/environments/environment.ts
+++ b/src/environments/environment.ts
@@ -3,7 +3,7 @@
 // The list of file replacements can be found in `angular.json`.
 
 export const environment = {
-  isDataAvailableInRealService: false,
+  isDataAvailableInRealService: true,
   production: false,
   findMapLocationBySearchDataURL : 'http://nominatim.openstreetmap.org/search?format=json&addressdetails=1&limit=5&q=',
   findMapLocationBySearchLLURL : 'https://nominatim.openstreetmap.org/reverse?format=json&lat='
